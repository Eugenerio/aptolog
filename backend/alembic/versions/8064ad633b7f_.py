"""empty message

Revision ID: 8064ad633b7f
Revises: d94aa24fed63
Create Date: 2023-08-10 20:33:41.898912

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision: str = '8064ad633b7f'
down_revision: Union[str, None] = 'd94aa24fed63'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('crates', sa.Column('author_id', sa.Integer(), nullable=False))
    op.drop_index('ix_crates_author', table_name='crates')
    op.create_index(op.f('ix_crates_author_id'), 'crates', ['author_id'], unique=False)
    op.drop_column('crates', 'author')
    op.add_column('dependencies', sa.Column('dependency_id', sa.Integer(), nullable=False))
    op.alter_column('dependencies', 'crate_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.drop_index('ix_dependencies_crate_id', table_name='dependencies')
    op.drop_index('ix_dependencies_dependency', table_name='dependencies')
    op.drop_column('dependencies', 'id')
    op.drop_column('dependencies', 'dependency')
    op.alter_column('roles', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.drop_index('ix_roles_id', table_name='roles')
    op.create_unique_constraint(None, 'roles', ['name'])
    op.alter_column('tags', 'crate_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('tags', 'tag',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.drop_index('ix_tags_crate_id', table_name='tags')
    op.drop_index('ix_tags_tag', table_name='tags')
    op.drop_column('tags', 'id')
    op.alter_column('users', 'username',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'email',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.alter_column('users', 'password',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.drop_index('ix_users_id', table_name='users')
    # op.drop_index('password', table_name='users')
    op.create_unique_constraint(None, 'users', ['username'])
    op.add_column('versions', sa.Column('uploader_id', sa.Integer(), nullable=False))
    op.alter_column('versions', 'crate_id',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.alter_column('versions', 'version',
               existing_type=mysql.VARCHAR(length=255),
               nullable=False)
    op.alter_column('versions', 'upload_date',
               existing_type=mysql.DATETIME(),
               nullable=False)
    op.alter_column('versions', 'size',
               existing_type=mysql.INTEGER(),
               nullable=False)
    op.drop_index('ix_versions_crate_id', table_name='versions')
    op.drop_column('versions', 'id')
    op.drop_column('versions', 'uploader')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('versions', sa.Column('uploader', mysql.VARCHAR(length=255), nullable=True))
    op.add_column('versions', sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False))
    op.create_index('ix_versions_crate_id', 'versions', ['crate_id'], unique=False)
    op.alter_column('versions', 'size',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.alter_column('versions', 'upload_date',
               existing_type=mysql.DATETIME(),
               nullable=True)
    op.alter_column('versions', 'version',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.alter_column('versions', 'crate_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.drop_column('versions', 'uploader_id')
    op.drop_constraint(None, 'users', type_='unique')
    op.create_index('password', 'users', ['password'], unique=False)
    op.create_index('ix_users_id', 'users', ['id'], unique=False)
    op.alter_column('users', 'password',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'email',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.alter_column('users', 'username',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.add_column('tags', sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False))
    op.create_index('ix_tags_tag', 'tags', ['tag'], unique=False)
    op.create_index('ix_tags_crate_id', 'tags', ['crate_id'], unique=False)
    op.alter_column('tags', 'tag',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.alter_column('tags', 'crate_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'roles', type_='unique')
    op.create_index('ix_roles_id', 'roles', ['id'], unique=False)
    op.alter_column('roles', 'name',
               existing_type=mysql.VARCHAR(length=255),
               nullable=True)
    op.add_column('dependencies', sa.Column('dependency', mysql.VARCHAR(length=255), nullable=True))
    op.add_column('dependencies', sa.Column('id', mysql.INTEGER(), autoincrement=True, nullable=False))
    op.create_index('ix_dependencies_dependency', 'dependencies', ['dependency'], unique=False)
    op.create_index('ix_dependencies_crate_id', 'dependencies', ['crate_id'], unique=False)
    op.alter_column('dependencies', 'crate_id',
               existing_type=mysql.INTEGER(),
               nullable=True)
    op.drop_column('dependencies', 'dependency_id')
    op.add_column('crates', sa.Column('author', mysql.VARCHAR(length=255), nullable=True))
    op.drop_index(op.f('ix_crates_author_id'), table_name='crates')
    op.create_index('ix_crates_author', 'crates', ['author'], unique=False)
    op.drop_column('crates', 'author_id')
    # ### end Alembic commands ###
